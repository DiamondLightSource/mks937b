#! Generated by VisualDCT v2.5
#! DBDSTART
#! DBDEND


# mks937bPirg.db
#% macro, __doc__, Template database for a pirani guage connected to
# one channel of an mks937b Multi-Sensor System
# A note on the optional macros: they default to an appropriate hard-coded
# value if no value is passed for expansion.
# They are provided to allow the default set points to be changed.
# Once the set point needs to be changed it may be necessary to alter 
# various other fields defining the range of allowed values.
# For the majority of applications the defaults should be used.  The levels
# should only be changed at the request of the vacuum group for non-standard
# vacuum systems.
#
# required substitutions:
#% macro, device,  device name
#% macro, port,    serial port (steam device code ie /ty/0/1 => ty_0_1)
#% macro, channel, MKS 937A channel number (1-4)
#% macro, address, Controller address (001 .. 253)
#% macro, name,        Object name, and gui association name
#

################################################################################

# This associates an edm screen with the template
# % gui, $(name=), edm, mks937bPirg.edl, device=$(device)

# This associates BOY screens with the template
# % gui, $(name=), boydetail, mks937bApp_opi/pirg_detail.opi, device=$(device), desc=$(device)
# % gui, $(name=), boyembed, mks937bApp_opi/pirg_embed_box.opi, device=$(device), desc=$(device)
# % gui, $(name=), boyembed, mks937bApp_opi/pirg_embed.opi, device=$(device), desc=$(device)

# These define what PVs a valve detail screen should contain
# % gui, $(name=), readback, Pressure,  low, $(device):P
# % gui, $(name=), readback, Status,  low, $(device):STA
# % gui, $(name=), readback, IMG Enable,  low, $(device):CTL:SP
# % gui, $(name=), readback, Ion Pump I/L On,  low, $(device):RLY1:SP
# % gui, $(name=), readback, Ion MPS I/L On,  low, $(device):RLY2:SP
# % gui, $(name=), enum, PirgFilament, low, $(device):ENABLE

# Status
#
#% archiver 10 Monitor
#% controldesk Pressure smon
#
record(mbbi, "$(device):STA") {
  field(DTYP, "Soft Channel")
#  field(DTYP, "stream")
#  field(INP, "@mks937b.protocol status($(address),$(channel),$(device)) $(port)")
#  field(SCAN, "1 second")
  field(DESC, "Status")
#  field(FLNK, "$(device):PDIS")
  field(ZRST, "OK")
  field(ONST, "OK")
  field(TWST, "Above Range")
  field(THST, "At Atmosphere")
  field(FRST, "Low Emission")
  field(FVST, "Filament Off")
  field(SXST, "HV Off")
  field(SVST, "Startup Delay")
  field(EIST, "Below Range")
  field(NIST, "Controlled")
  field(TEST, "Protected State")
  field(ELST, "No Gauge")
  field(TVST, "Not Connected")
  field(TTST, "Wrong Gauge")
  field(FTST, "Bad Command")
  field(FFST, "Locked Out")
  field(UNSV, "MAJOR")
  field(ZRSV, "NO_ALARM")
  field(ONSV, "NO_ALARM")
  field(TWSV, "MINOR")
  field(THSV, "MINOR")
  field(FRSV, "MAJOR")
  field(FVSV, "MAJOR")
  field(SXSV, "MAJOR")
  field(SVSV, "MINOR")
  field(EISV, "NO_ALARM")
  field(NISV, "MINOR")
  field(TESV, "MINOR")
  field(ELSV, "MAJOR")
  field(TVSV, "MAJOR")
  field(TTSV, "MAJOR")
  field(FTSV, "MAJOR")
  field(FFSV, "MAJOR")
}

#############################################################################
# Pressure
# 
# % archiver 1 Monitor
# % controldesk Pressure readback
record(ai, "$(device):P") 
{
  field(DESC, "Pressure")
  field(DTYP, "stream")
  field(SCAN, "1 second")
  field(INP, "@mks937b.protocol pressure($(address),$(channel),$(device)) $(port)")
  field(FLNK, "$(device):PLOG")
  field(EGU, "mbar")
  field(PREC, "3")
  field(HOPR, "1000")
  field(LOPR, "0.001")
  field(SDIS, "$(device):PDIS")
  field(DISS, "INVALID")
}

record(calcout, "$(device):ADEL") 
{
  field(DESC, "deadband")
  field(CALC, "A/B")
  field(OUT, "$(device):P.ADEL")
  field(INPA, "$(device):P")
  field(INPB, "20")
  field(SCAN, "10 second")
}

#
#% archiver 1 Monitor
#
record(calc, "$(device):PLOG") 
{
  field(DESC, "log Pressure")
  field(EGU, "log")
  field(CALC, "LOG(A)")
  field(INPA, "$(device):P MS")
  field(HOPR, "3")
  field(LOPR, "-3")
  field(ADEL, "0.025")
  field(FLNK, "$(device):PSEQ")
}

#
# Determine if P is a valid pressure
# if so we can set STA to OK
#
record(calc, "$(device):GOODP") 
{
  field(DESC, "Valid pressure calc")
  field(INPA, "$(device):P.SEVR")
  field(CALC, "(A>0)?0:1")
}
record(seq, "$(device):PSEQ") 
{
  field(DESC, "Seq Pressure & Status")
  field(SELM, "Specified")
  field(SELL, "$(device):GOODP PP")
  field(DOL1, "OK")
  field(LNK1, "$(device):STA PP")
}


record(calc, "$(device):PDIS") 
{
  field(PHAS, "1")
  field(CALC, "(A>1)?1:0")
  field(INPA, "$(device):STA")
  field(FLNK, "$(device):P")
}

record(mbbo, "$(device):ENABLE") {
  field(DESC, "Enable Pirani power")
  field(DTYP, "stream")
  field(OUT, "@mks937b.protocol pirgenable($(address),$(channel)) $(port)")
  field(ZRST, "Off")
  field(ONST, "On")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(ZRSV, "MAJOR")
  field(ONSV, "NO_ALARM")
  field(DOL, "1")
  field(PINI, "YES")
  field(FLNK, "$(device):ISENABLED")
}

record(mbbi, "$(device):ISENABLED") {
  field(DESC, "Pirani power")
  field(DTYP, "stream")
  field(INP,  "@mks937b.protocol get_gauge_enabled($(address),$(channel)) $(port)")
  field(ZRST, "Off")
  field(ONST, "On")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(ZRSV, "MAJOR")
  field(ONSV, "NO_ALARM")
  field(PINI, "YES")
}

